
;; Set up quick-lisp
(load "quicklisp.lisp")
(quicklisp-quickstart:install)
(ql:add-to-init-file)

;; Add MELPA repository
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

;; Install sly if not already installed
(unless (package-installed-p 'sly)
  (package-refresh-contents)
  (package-install 'sly))

;; Configure SBCL
(setq inferior-lisp-program "sbcl")

;; Optional: Enable paredit for balanced parentheses
(unless (package-installed-p 'paredit)
  (package-install 'paredit))

(autoload 'enable-paredit-mode "paredit" "Turn on pseudo-structural editing of Lisp code." t)
(add-hook 'emacs-lisp-mode-hook       #'enable-paredit-mode)
(add-hook 'eval-expression-minibuffer-setup-hook #'enable-paredit-mode)
(add-hook 'ielm-mode-hook             #'enable-paredit-mode)
(add-hook 'lisp-mode-hook             #'enable-paredit-mode)
(add-hook 'lisp-interaction-mode-hook #'enable-paredit-mode)
(add-hook 'scheme-mode-hook           #'enable-paredit-mode)

;; Optional: Rainbow delimiters for colorful parentheses
(unless (package-installed-p 'rainbow-delimiters)
  (package-install 'rainbow-delimiters))

(add-hook 'prog-mode-hook #'rainbow-delimiters-mode)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages '(ace-window sly rainbow-delimiters paredit))
 '(warning-suppress-types '((comp))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(font-lock-function-name-face ((t (:foreground "color-39"))))
 '(minibuffer-prompt ((t (:foreground "color-38")))))

;; Disable backup files (those ending in ~)
(setq make-backup-files nil)

;; Disable auto-save files (those with # around the name)
(setq auto-save-default nil)

;; Disable lock files (those starting with .#)
(setq create-lockfiles nil)

;; Add MELPA repository if you haven't already
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

;; Install darcula-theme if not already installed
(unless (package-installed-p 'darcula-theme)
  (package-refresh-contents)
  (package-install 'darcula-theme))

;; Install split-sequence
(ql:quickload "split-sequence")

;; Load the theme
(load-theme 'darcula t)
